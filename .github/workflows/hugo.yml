# GitHub workflow for building and deploying a Hugo site to GitHub Pages
name: Deploy Hugo site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches:
      - main  # Set this to your default branch

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

# Default to bash
defaults:
  run:
    shell: bash

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    env:
      HUGO_VERSION: 0.147.7
    steps:
      - name: Install dependencies
        run: |
          apt-get update || true
          apt-get install -y wget || true

      - name: Install Hugo CLI
        run: |
          if command -v wget &> /dev/null; then
            wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb
          else
            curl -L -o ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb
          fi
          sudo dpkg -i ${{ runner.temp }}/hugo.deb || dpkg -i ${{ runner.temp }}/hugo.deb

      - name: Install Dart Sass
        run: |
          if command -v sudo &> /dev/null && command -v snap &> /dev/null; then
            sudo snap install dart-sass
          else
            echo "Skipping Dart Sass installation as sudo or snap is not available"
          fi

      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v4

      - name: Build with Hugo
        env:
          # For maximum backward compatibility with Hugo modules
          HUGO_ENVIRONMENT: production
          HUGO_ENV: production
        run: |
          # Set explicit baseURL to ensure all paths are correct
          hugo \
            --gc \
            --minify \
            --baseURL "https://myuptime-info.github.io/uptimer/"

      - name: Create uptimer directory structure
        run: |
          # Create the uptimer directory and move all content there
          mkdir -p public/uptimer
          mv public/* public/uptimer/ 2>/dev/null || true
          mv public/.* public/uptimer/ 2>/dev/null || true
          # Remove the uptimer directory from itself to avoid recursion
          rm -rf public/uptimer/uptimer

      - name: Copy root redirect files
        run: |
          # Copy the redirect index.html to the root
          cp static/index.html public/index.html
          cp static/CNAME public/CNAME
          cp .nojekyll public/

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
